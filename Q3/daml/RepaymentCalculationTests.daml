module RepaymentCalculationTests where

import LoanWorkflowWithRepayment
import DA.Assert
import Daml.Script

test_RaymentTokensReturnMinimumOfAllTokensGreaterThanOrEqualToAmount : Script ()
test_RaymentTokensReturnMinimumOfAllTokensGreaterThanOrEqualToAmount = do
    test <- allocateParty "test"
    let tokens = 
          [ Token { value = 1.0; owner = test; shouldArchive = False },
            Token { value = 0.8; owner = test; shouldArchive = False },
            Token { value = 1.2; owner = test; shouldArchive = False } ]
    
    let actual = getTokensForRepayment 0.9 tokens

    [ Token { value = 1.0; owner = test; shouldArchive = False } ] === actual

test_RaymentTokensReturnListOfTokensMeetingAmountWhenNoTokensAreGreaterThanOrEqualToAmount : Script ()
test_RaymentTokensReturnListOfTokensMeetingAmountWhenNoTokensAreGreaterThanOrEqualToAmount = do
    test <- allocateParty "test"
    let tokens = 
          [ Token { value = 1.0; owner = test; shouldArchive = False },
            Token { value = 1.2; owner = test; shouldArchive = False },
            Token { value = 0.8; owner = test; shouldArchive = False }]

    let repaymentAmount = 1.3
    
    let actual = getTokensForRepayment repaymentAmount tokens

    [ 
      Token { value = 1.0; owner = test; shouldArchive = False },
      Token { value = 1.2; owner = test; shouldArchive = False } 
      ] === actual
